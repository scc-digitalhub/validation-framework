"""
RunInference class module.
The RunInference class describes a Run object that performs
inference tasks over a Resource. With inference task, we mean
a general description of a resource (extension, metadata etc.)
and the inference of a data schema (field types).
"""

# pylint: disable=import-error,invalid-name
from abc import ABCMeta, abstractmethod
from typing import Any, Optional


class Profiling(object, metaclass=ABCMeta):
    """
    Run plugin that executes inference over a Resource.
    """

    def __init__(self) -> None:

        self.lib_name = None
        self.lib_version = None
        self.update_library_info()

    @abstractmethod
    def update_library_info(self) -> None:
        """
        Update metadata about the profiling framework used.
        """
   
    @abstractmethod
    def parse_profile(self) -> dict:
        """
        Parse the profile generated by the framework.
        """

    @abstractmethod
    def validate_profile(self,
                      profile: Optional[Any] = None
                      ) -> None:
        """
        Validate the profile.
        """

    @abstractmethod
    def profile(self,
                      kwargs: dict = None) -> Any:
        """
        Generate a profile.
        """
 